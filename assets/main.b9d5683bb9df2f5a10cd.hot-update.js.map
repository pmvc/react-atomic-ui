{"version":3,"file":"main.b9d5683bb9df2f5a10cd.hot-update.js","sources":["webpack:///../react-atomic-organism/packages/organism-react-html2canvas/build/es/ui/organisms/HTMLToCanvas.js"],"sourcesContent":["var _s = $RefreshSig$();\n\nimport React, { forwardRef, useRef, useState, useImperativeHandle } from \"react\";\nimport Iframe from \"organism-react-iframe\";\nimport get from \"get-object-value\";\nimport callfunc from \"call-func\";\nvar defaultAssets = {\n  \"html2canvas.min.js\": \"https://cdn.jsdelivr.net/npm/html2canvas@1.0.0-rc.7/dist/html2canvas.min.js\"\n};\n\nvar getAsset = function getAsset(file) {\n  return get(defaultAssets, [file]);\n};\n\nvar initialContent = function initialContent(jsArr) {\n  return \"\\n<html>\\n<body>\\n  <script src=\\\"\".concat(getAsset(\"html2canvas.min.js\"), \"\\\"></script>\\n  \").concat((jsArr || []).map(function (js) {\n    return \"<script src=\\\"\".concat(js, \"\\\"></script>\");\n  }), \"\\n</body>\\n</html>\\n\");\n};\n\nvar HTMLToCanvas = function HTMLToCanvas(props, ref) {\n  _s();\n\n  var children = props.children,\n      jsArr = props.jsArr,\n      onCanvas = props.onCanvas;\n  var iframe = useRef();\n  var preview = useRef();\n  var canvas = useRef();\n\n  var _timer = useRef();\n\n  useImperativeHandle(ref, function () {\n    getCanvas: (function () {\n      if (canvas.current) {\n        return canvas.current;\n      } else {\n        console.warn(\"canvas not ready.\");\n      }\n    });\n  });\n\n  var handleIframe = function handleIframe(el) {\n    return iframe.current = el;\n  };\n\n  var handlePreview = function handlePreview(el) {\n    return preview.current = el;\n  };\n\n  var handleLoad = function handleLoad() {\n    var oIframe = iframe.current;\n    _timer.current = setTimeout(function () {\n      var oIframwWindow = oIframe.getWindow();\n      var html2canvas = oIframwWindow.html2canvas;\n      html2canvas(oIframe.root).then(function (dCanvas) {\n        canvas.current = dCanvas;\n        callfunc(onCanvas, [{\n          iframe: oIframe,\n          canvas: dCanvas\n        }]);\n        preview.current.innerHTML = '';\n        preview.current.appendChild(dCanvas);\n      });\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Iframe, {\n    autoHeight: true,\n    initialContent: initialContent(jsArr),\n    onLoad: handleLoad,\n    ref: handleIframe\n  }, children), /*#__PURE__*/React.createElement(\"div\", {\n    ref: handlePreview,\n    className: \"preivew\"\n  }));\n};\n\n_s(HTMLToCanvas, \"sXiyxOEGeNM8Kh6x48TQC+Xy2ig=\", false, function () {\n  return [useImperativeHandle];\n});\n\n_c = HTMLToCanvas;\nexport default /*#__PURE__*/_c2 = forwardRef(HTMLToCanvas);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HTMLToCanvas\");\n$RefreshReg$(_c2, \"%default%\");\n\n__react_refresh_utils__.registerExportsForReactRefresh(module);\n\nif (module.hot && __react_refresh_utils__.isReactRefreshBoundary(module)) {\n  module.hot.dispose(__react_refresh_utils__.createHotDisposeCallback(module));\n  module.hot.accept(__react_refresh_utils__.createHotErrorHandler(module.id));\n\n  if (!!module.hot.data && !!Object.keys(module.hot.data).length) {\n    if (!module.hot.data.module || __react_refresh_utils__.shouldInvalidateReactRefreshBoundary(module.hot.data.module, module)) {\n      window.location.reload();\n    }\n\n    __react_refresh_utils__.enqueueUpdate();\n  }\n}"],"mappingssourceRoot":""}