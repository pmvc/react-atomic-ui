{"version":3,"file":"17.e64d1d1bdcc9ebe543f2.bundle.js","sources":["webpack:///../react-atomic-organism/packages/organism-react-ajax/build/es/src/worker.js"],"sourcesContent":["import _classCallCheck from \"reshow-runtime/es/helpers/classCallCheck\";\nimport _createClass from \"reshow-runtime/es/helpers/createClass\";\nimport _defineProperty from \"reshow-runtime/es/helpers/defineProperty\";\nimport _typeof from \"reshow-runtime/es/helpers/typeof\";\nimport _objectWithoutProperties from \"reshow-runtime/es/helpers/objectWithoutProperties\";\nimport _objectSpread from \"reshow-runtime/es/helpers/objectSpread2\";\nimport get, { getDefault } from 'get-object-value';\nimport nonWorker from 'non-worker';\nimport req from 'superagent';\nvar keys = Object.keys;\nvar arrWs = {};\n\nvar handleMessage = function handleMessage(e) {\n  var data = get(e, ['data']);\n\n  switch (data.type) {\n    case 'initWs':\n      initWs(data.ws)(data.params);\n      break;\n\n    case 'closeWs':\n      closeWs(data.ws);\n      break;\n\n    case 'ajaxGet':\n      ajaxGet(data);\n      break;\n\n    case 'ajaxPost':\n      ajaxPost(data);\n      break;\n  }\n};\n\nvar oNonWorker = new nonWorker().onMessage(handleMessage);\nvar post = oNonWorker.post;\nexport default oNonWorker;\n\nvar cookParams = function cookParams(action, callReq) {\n  var params = get(action, ['params'], {});\n\n  var cookHeaders = _objectSpread({}, get(params, ['globalHeaders'], {}), {}, get(params, ['headers'], {}), {\n    Accept: get(params, ['accept'], 'application/json')\n  });\n\n  params.cookHeaders = cookHeaders;\n  var superagent = params.superagent || {};\n  var syncKeys = ['responseType'];\n  syncKeys.forEach(function (key) {\n    if (params[key]) {\n      superagent[key] = params[key];\n    }\n  });\n  keys(superagent).forEach(function (key) {\n    callReq = callReq[key].apply(callReq, superagent[key]);\n  });\n  return params;\n};\n\nvar ajaxGet = function ajaxGet(_ref) {\n  var url = _ref.url,\n      action = _ref.action;\n  var callReq = req.get(url);\n  var params = cookParams(action, callReq);\n  callReq.query(params.query).set(params.cookHeaders).end(function (err, res) {\n    if (res) {\n      var error = res.error,\n          _req = res.req,\n          text = res.text,\n          xhr = res.xhr,\n          response = _objectWithoutProperties(res, [\"error\", \"req\", \"text\", \"xhr\"]);\n\n      post(_objectSpread({}, action, {\n        text: text,\n        response: response\n      }));\n    }\n  });\n};\n\nvar ajaxPost = function ajaxPost(_ref2) {\n  var url = _ref2.url,\n      action = _ref2.action;\n  var callReq;\n\n  switch (method) {\n    case 'delete':\n      callReq = req.del(url);\n      break;\n\n    case 'head':\n      callReq = req.head(url);\n      break;\n\n    case 'patch':\n      callReq = req.patch(url);\n      break;\n\n    case 'put':\n      callReq = req.put(url);\n      break;\n\n    default:\n      callReq = req.post(url);\n      break;\n  }\n\n  var _cookParams = cookParams(action, callReq),\n      query = _cookParams.query,\n      method = _cookParams.method,\n      isSendJson = _cookParams.isSendJson,\n      cookHeaders = _cookParams.cookHeaders,\n      responseType = _cookParams.responseType,\n      params = _objectWithoutProperties(_cookParams, [\"query\", \"method\", \"isSendJson\", \"cookHeaders\", \"responseType\"]);\n\n  var isSend = false;\n\n  if (isSendJson) {\n    isSend = true;\n  } else {\n    if (null == isSendJson) {\n      keys(query).every(function (key) {\n        if ('object' !== _typeof(query[key])) {\n          return true;\n        }\n\n        isSend = true;\n        return false;\n      });\n    }\n  }\n\n  if (!isSend) {\n    callReq = callReq.type('form');\n  }\n\n  callReq.send(query).set(cookHeaders).end(function (err, res) {\n    if (res) {\n      var error = res.error,\n          _req2 = res.req,\n          text = res.text,\n          xhr = res.xhr,\n          response = _objectWithoutProperties(res, [\"error\", \"req\", \"text\", \"xhr\"]);\n\n      post(_objectSpread({}, action, {\n        text: text,\n        response: response\n      }));\n    }\n  });\n};\n\nvar closeWs = function closeWs(url) {\n  if (arrWs[url]) {\n    arrWs[url].close();\n    delete arrWs[url];\n  }\n\n  return !arrWs[url];\n};\n\nvar WebSocketHelper = /*#__PURE__*/function () {\n  function WebSocketHelper(url, params) {\n    var _this = this;\n\n    _classCallCheck(this, WebSocketHelper);\n\n    _defineProperty(this, \"isWsConnect\", false);\n\n    _defineProperty(this, \"ping\", function () {\n      _this.pingTimeout = setTimeout(function () {\n        if (!_this.isWsConnect) {\n          console.warn(_this.url, 'ajaxws-restore');\n\n          _this.open();\n        } else {\n          _this.ws.send(JSON.stringify({\n            type: 'ping'\n          }));\n        }\n\n        _this.ping();\n      }, 15000);\n    });\n\n    this.ws = null;\n    this.pingTimeout = null;\n    this.url = url;\n    this.params = params;\n    this.open();\n  }\n\n  _createClass(WebSocketHelper, [{\n    key: \"open\",\n    value: function open() {\n      var _this2 = this;\n\n      if (this.isWsConnect) {\n        return;\n      }\n\n      var url = this.url;\n      var params = this.params;\n      var ws = new WebSocket(url);\n      this.ws = ws;\n\n      ws.onopen = function (e) {\n        _this2.isWsConnect = true;\n\n        _this2.ping();\n\n        var messages = params.messages;\n\n        if (get(messages, ['length'])) {\n          messages.forEach(function (m) {\n            return ws.send(JSON.stringify(m));\n          });\n        }\n      };\n\n      ws.onerror = function (e) {\n        _this2.isWsConnect = false;\n      };\n\n      ws.onmessage = function (e) {\n        switch (e.data) {\n          case 'pong':\n            break;\n\n          default:\n            post({\n              type: 'ws',\n              text: e.data,\n              url: url\n            });\n            break;\n        }\n      };\n\n      ws.onclose = function (e) {\n        _this2.isWsConnect = false;\n        console.warn('WS close', url);\n      };\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.ws.close();\n      clearTimeout(this.pingTimeout);\n    }\n  }]);\n\n  return WebSocketHelper;\n}();\n\nvar initWs = function initWs(url) {\n  return function (params) {\n    var create = function create() {\n      arrWs[url] = new WebSocketHelper(url, params);\n    };\n\n    if (!arrWs[url]) {\n      create(url);\n    }\n  };\n};"],"mappingssourceRoot":""}